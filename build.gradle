
// got to use the buildscript way of specifying bnd plugin - plugins {id:...} fails
// because automatically expecting/searching workspace (cnf folder above project folder)
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.5.0'
    }
}

apply plugin: 'java'

group = 'com.pidoco'
// in settings: name
version = '0.1-SNAPSHOT'
description = 'URI manipulation made easy: new JURI(uri).replaceQueryParameter("query", "my next query").toString()'
sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    compile 'com.google.guava:guava:18.0' // for URI element-specific escapers
    compile 'org.apache.commons:commons-lang3:3.7' // using this for null checks, common string modifications etc

    // testing in OSGi environment requires these wrappers
    testCompile 'org.osgi:osgi.enroute.junit.wrapper:4.12.0'
    testCompile 'org.osgi:osgi.enroute.hamcrest.wrapper:1.3.0'
    testRuntime 'org.slf4j:slf4j-simple:1.7.25'
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'maven-publish'
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
}
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
        }
    }
}

apply plugin: 'biz.aQute.bnd.builder'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'juri'
        packaging 'jar'
        description = '''URI manipulation made easy:
          new JURI(uri).replaceQueryParameter("query", "my next query").toString()'''
        url 'http://www.github.com/pidoco/juri'

        scm {
          connection 'scm:git:https://github.com/pidoco/juri.git'
          developerConnection 'scm:git:git@github.com:pidoco/juri.git'
          url 'https://github.com/pidoco/juri'
        }

        licenses {
          license {
            name 'The MIT License (MIT)'
            url 'https://github.com/pidoco/juri/blob/master/LICENSE.txt'
          }
        }

        developers {
          developer {
            id 'tec'
            name 'Silvan Golega'
            email 'silvan.golega@pidoco.com'
          }
          developer {
            id 'georgkoester'
            name 'Georg Koester'
            email 'mail@georgkoester.de'
          }
        }
      }
    }
  }
}
